export default async function({addon:e}){function n(){e.settings.get("browserFullscreen")&&!e.self.disabled&&(e.tab.redux.state.scratchGui.mode.isFullScreen&&null===document.fullscreenElement?document.documentElement.requestFullscreen():e.tab.redux.state.scratchGui.mode.isFullScreen||null===document.fullscreenElement||document.exitFullscreen())}async function s(){const n=await e.tab.waitForElement(".sa-body-editor")
e.tab.redux.state.scratchGui.mode.isFullScreen?n.classList.add("sa-fullscreen"):n.classList.remove("sa-fullscreen")}async function c(){l=await e.tab.waitForElement("[class*=monitor-list_monitor-list-scaler]"),a=await e.tab.waitForElement('[class*="stage-wrapper_full-screen"] [class*="stage_stage"]'),t=new ResizeObserver((()=>{const e=a.getBoundingClientRect().width/480
l.style.transform=`scale(${e}, ${e})`})),t.observe(a)}let l,t,a
c(),s(),n(),e.tab.redux.initialize(),e.tab.redux.addEventListener("statechanged",(e=>{"scratch-gui/mode/SET_FULL_SCREEN"===e.detail.action.type&&(c(),n(),s())})),window.addEventListener("resize",(()=>{e.settings.get("browserFullscreen")&&!e.self.disabled&&null===document.fullscreenElement&&e.tab.redux.state.scratchGui.mode.isFullScreen&&e.tab.redux.dispatch({type:"scratch-gui/mode/SET_FULL_SCREEN",isFullScreen:0})})),document.addEventListener("fullscreenchange",(()=>{null===document.fullscreenElement&&e.tab.redux.state.scratchGui.mode.isFullScreen&&e.tab.redux.dispatch({type:"scratch-gui/mode/SET_FULL_SCREEN",isFullScreen:0})})),e.settings.addEventListener("change",(()=>{n()})),e.self.addEventListener("disabled",(()=>{t.disconnect()})),e.self.addEventListener("reenabled",(()=>{t.observe(a),n()}))}