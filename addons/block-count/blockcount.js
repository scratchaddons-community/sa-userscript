export default async function({addon:e,msg:t}){const n=e.tab.traps.vm,o=()=>{let e=0,t=0,o=new Set(n.runtime.targets.map((e=>e.sprite.blocks._blocks)))
return o.forEach((n=>{t+=Object.values(n).filter((e=>!e.parent)).length,e+=Object.values(n).filter((e=>!e.shadow)).length})),{blockCount:e,scriptCount:t,spriteCount:o.size-1}},c=async()=>{if(n.editingTarget){let c=null
for(;;){let s,u=(await e.tab.waitForElement("[class^='menu-bar_main-menu']",{markAsSeen:1,reduxEvents:["scratch-gui/mode/SET_PLAYER","fontsLoaded/SET_FONTS_LOADED","scratch-gui/locales/SELECT_LOCALE"],reduxCondition(e){return!e.scratchGui.mode.isPlayerOnly}})).appendChild(document.createElement("span"))
e.tab.displayNoneWhileDisabled(u),u.style.order=1,u.style.padding="9px",u.innerText=t("blocks",{num:o().blockCount}),c&&(n.off("PROJECT_CHANGED",c),n.runtime.off("PROJECT_LOADED",c)),c=async()=>{clearTimeout(s),s=setTimeout((async()=>{u.innerText=t("blocks",{num:o().blockCount})}),1e3)},n.on("PROJECT_CHANGED",c),n.runtime.on("PROJECT_LOADED",c)}}else{let e=setTimeout((function(){c(),clearTimeout(e)}),1e3)}}
c()}