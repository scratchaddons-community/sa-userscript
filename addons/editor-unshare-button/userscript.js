export default async function({addon:t,msg:e}){const{redux:s}=t.tab
for(;;){const n=await t.tab.waitForElement("span[class*='share-button_share-button'][class*='is-shared']",{reduxCondition(t){return!t.scratchGui.mode.isPlayerOnly},markAsSeen:1})
n.classList.add("sa-unshare-button"),n.querySelector("span").innerText=e("unshare-button"),n.addEventListener("click",(async function a(){await t.tab.confirm(e("unshare-button"),e("unshare-msg"),{useEditorClasses:1})&&(s.dispatch({type:"SET_COMMENT_FETCH_STATUS",infoType:"project",status:"FETCHING"}),fetch(`/site-api/projects/all/${s.state.preview.projectInfo.id}/`,{headers:{"x-csrftoken":t.auth.csrfToken,"x-requested-with":"XMLHttpRequest"},method:"PUT",credentials:"include",body:JSON.stringify({isPublished:0})}).then((t=>{if(200!==t.status)return s.dispatch({type:"SET_COMMENT_FETCH_STATUS",infoType:"project",status:"FETCH_ERROR"})
s.dispatch({type:"SET_COMMENT_FETCH_STATUS",infoType:"project",status:"FETCHED"}),n.classList.remove("sa-unshare-button"),n.removeEventListener("click",a),s.dispatch({type:"UPDATE_PROJECT_INFO",info:{is_published:0}})})))}))}}