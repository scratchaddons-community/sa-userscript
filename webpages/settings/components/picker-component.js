export default async function({template:s}){const t=Vue.extend({props:["value","addon","setting","no_alpha"],template:s,data(){return{isOpen:0,color:this.value,canCloseOutside:0,formats:"",opening:0,loadColorPicker:0}},ready(){this.loadColorPicker&&(this.formats=this.no_alpha?"hex,rgb,hsv,hsl":"hex,hex8,rgb,hsv,hsl",this.$els.pickr.addEventListener("input",(s=>{this.color="#"+s.detail.value,this.value!==this.color&&(this.$parent.addonSettings[this.setting.id]="#"+this.$els.pickr.hex8,this.$parent.updateSettings(this.addon,{wait:250,settingId:this.setting.id}))})),this.$root.$on("close-pickers",(s=>{this.isOpen&&this!==s&&this.toggle(this.$parent.addon,this.$parent.setting,0,{callCloseDropdowns:0,callClosePickers:0})})))},computed:{noAlphaString(){return String(this.no_alpha)}},methods:{toggle(s,t,i=!this.isOpen,{callCloseDropdowns:h=1,callClosePickers:e=1}={}){this.loadColorPicker&&(this.isOpen=i,this.opening=1,e&&this.$root.closePickers({isTrusted:1},this,{callCloseDropdowns:0}),h&&this.$root.closeResetDropdowns({isTrusted:1}),this.opening=0,this.$els.pickr._valueChanged(),this.color="#"+this.$els.pickr.hex8,this.value!==this.color&&(this.$parent.addonSettings[t.id]="#"+this.$els.pickr.hex8,this.$parent.updateSettings(s,{wait:250,settingId:t.id})),this.canCloseOutside=0,setTimeout((()=>{this.canCloseOutside=1}),0))}},watch:{value(){this.color=this.value,this.$els.pickr?._valueChanged()},isOpen(){this.$els.pickr?._valueChanged()},loadColorPicker(){this.$options.ready[0].call(this)}}})
Vue.component("picker",t)}